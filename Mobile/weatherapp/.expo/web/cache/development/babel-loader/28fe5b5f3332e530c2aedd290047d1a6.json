{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/Tabs/index.js\";\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar React = require(\"react\");\n\nvar PropTypes = React.PropTypes,\n    Component = React.Component;\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar Dimensions = ReactNative.Dimensions,\n    View = ReactNative.View,\n    Animated = ReactNative.Animated,\n    ScrollView = ReactNative.ScrollView,\n    StyleSheet = ReactNative.StyleSheet,\n    InteractionManager = ReactNative.InteractionManager,\n    Platform = ReactNative.Platform,\n    ViewPropTypes = ReactNative.ViewPropTypes;\n\nvar TimerMixin = require(\"react-timer-mixin\");\n\nvar SceneComponent = require(\"./SceneComponent\");\n\nvar _require = require(\"./DefaultTabBar\"),\n    DefaultTabBar = _require.DefaultTabBar;\n\nvar _require2 = require(\"./ScrollableTabBar\"),\n    ScrollableTabBar = _require2.ScrollableTabBar;\n\nvar ScrollableTabView = React.createClass({\n  displayName: \"ScrollableTabView\",\n  mixins: [TimerMixin],\n  statics: {\n    DefaultTabBar: DefaultTabBar,\n    ScrollableTabBar: ScrollableTabBar\n  },\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf([\"top\", \"bottom\", \"overlayTop\", \"overlayBottom\"]),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    style: ViewPropTypes.style,\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      tabBarPosition: \"top\",\n      initialPage: 0,\n      page: -1,\n      onChangeTab: function onChangeTab() {},\n      onScroll: function onScroll() {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue: new Animated.Value(this.props.initialPage),\n      containerWidth: Dimensions.get(\"window\").width,\n      sceneKeys: this.newSceneKeys({\n        currentPage: this.props.initialPage\n      })\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    var scrollFn = function scrollFn() {\n      if (_this.scrollView && Platform.OS === \"android\") {\n        var x = _this.props.initialPage * _this.state.containerWidth;\n\n        _this.scrollView.scrollTo({\n          x: x,\n          animated: false\n        });\n      }\n    };\n\n    this.setTimeout(function () {\n      InteractionManager.runAfterInteractions(scrollFn);\n    }, 0);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: props.children\n      });\n    }\n\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n  goToPage: function goToPage(pageNumber) {\n    var offset = pageNumber * this.state.containerWidth;\n\n    if (this.scrollView) {\n      this.scrollView.scrollTo({\n        x: offset,\n        y: 0,\n        animated: !this.props.scrollWithoutAnimation\n      });\n    }\n\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\n    });\n  },\n  renderTabBar: function renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    } else {\n      return React.createElement(DefaultTabBar, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }));\n    }\n  },\n  updateSceneKeys: function updateSceneKeys(_ref) {\n    var page = _ref.page,\n        _ref$children = _ref.children,\n        children = _ref$children === undefined ? this.props.children : _ref$children,\n        _ref$callback = _ref.callback,\n        callback = _ref$callback === undefined ? function () {} : _ref$callback;\n    var newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children: children\n    });\n    this.setState({\n      currentPage: page,\n      sceneKeys: newKeys\n    }, callback);\n  },\n  newSceneKeys: function newSceneKeys(_ref2) {\n    var _this2 = this;\n\n    var _ref2$previousKeys = _ref2.previousKeys,\n        previousKeys = _ref2$previousKeys === undefined ? [] : _ref2$previousKeys,\n        _ref2$currentPage = _ref2.currentPage,\n        currentPage = _ref2$currentPage === undefined ? 0 : _ref2$currentPage,\n        _ref2$children = _ref2.children,\n        children = _ref2$children === undefined ? this.props.children : _ref2$children;\n    var newKeys = [];\n\n    this._children(children).forEach(function (child, idx) {\n      var key = _this2._makeSceneKey(child, idx);\n\n      if (_this2._keyExists(previousKeys, key) || _this2._shouldRenderSceneKey(idx, currentPage)) {\n        newKeys.push(key);\n      }\n    });\n\n    return newKeys;\n  },\n  _shouldRenderSceneKey: function _shouldRenderSceneKey(idx, currentPageKey) {\n    var numOfSibling = this.props.prerenderingSiblingsNumber;\n    return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;\n  },\n  _keyExists: function _keyExists(sceneKeys, key) {\n    return sceneKeys.find(function (sceneKey) {\n      return key === sceneKey;\n    });\n  },\n  _makeSceneKey: function _makeSceneKey(child, idx) {\n    return child.props.heading + \"_\" + idx;\n  },\n  renderScrollableContent: function renderScrollableContent() {\n    var _this3 = this;\n\n    var scenes = this._composeScenes();\n\n    return React.createElement(ScrollView, _extends({\n      horizontal: true,\n      pagingEnabled: true,\n      automaticallyAdjustContentInsets: false,\n      contentOffset: {\n        x: this.props.initialPage * this.state.containerWidth\n      },\n      ref: function ref(scrollView) {\n        _this3.scrollView = scrollView;\n      },\n      onScroll: function onScroll(e) {\n        var offsetX = e.nativeEvent.contentOffset.x;\n\n        _this3._updateScrollValue(offsetX / _this3.state.containerWidth);\n      },\n      onMomentumScrollBegin: this._onMomentumScrollBeginAndEnd,\n      onMomentumScrollEnd: this._onMomentumScrollBeginAndEnd,\n      scrollEventThrottle: 16,\n      scrollsToTop: false,\n      showsHorizontalScrollIndicator: false,\n      scrollEnabled: !this.props.locked,\n      directionalLockEnabled: true,\n      alwaysBounceVertical: false,\n      keyboardDismissMode: \"on-drag\"\n    }, this.props.contentProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      }\n    }), scenes);\n  },\n  _composeScenes: function _composeScenes() {\n    var _this4 = this;\n\n    return this._children().map(function (child, idx) {\n      var key = _this4._makeSceneKey(child, idx);\n\n      return React.createElement(SceneComponent, {\n        key: child.key,\n        shouldUpdated: _this4._shouldRenderSceneKey(idx, _this4.state.currentPage),\n        style: {\n          width: _this4.state.containerWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        }\n      }, _this4._keyExists(_this4.state.sceneKeys, key) ? child : React.createElement(View, {\n        heading: child.props.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        }\n      }));\n    });\n  },\n  _onMomentumScrollBeginAndEnd: function _onMomentumScrollBeginAndEnd(e) {\n    var offsetX = e.nativeEvent.contentOffset.x;\n    var page = Math.round(offsetX / this.state.containerWidth);\n\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n  _updateSelectedPage: function _updateSelectedPage(nextPage) {\n    var localNextPage = nextPage;\n\n    if (typeof localNextPage === \"object\") {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\n    });\n  },\n  _onChangeTab: function _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage\n    });\n  },\n  _updateScrollValue: function _updateScrollValue(value) {\n    this.state.scrollValue.setValue(value);\n    this.props.onScroll(value);\n  },\n  _handleLayout: function _handleLayout(e) {\n    var _this5 = this;\n\n    var width = e.nativeEvent.layout.width;\n\n    if (Math.round(width) !== Math.round(this.state.containerWidth)) {\n      this.setState({\n        containerWidth: width\n      });\n      this.requestAnimationFrame(function () {\n        _this5.goToPage(_this5.state.currentPage);\n      });\n    }\n  },\n  _children: function _children() {\n    var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.children;\n    return React.Children.map(children, function (child) {\n      return child;\n    });\n  },\n  render: function render() {\n    var overlayTabs = this.props.tabBarPosition === \"overlayTop\" || this.props.tabBarPosition === \"overlayBottom\";\n    var tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(function (child) {\n        return child.props.heading;\n      }),\n      tabStyle: this._children().map(function (child) {\n        return child.props.tabStyle;\n      }),\n      activeTabStyle: this._children().map(function (child) {\n        return child.props.activeTabStyle;\n      }),\n      textStyle: this._children().map(function (child) {\n        return child.props.textStyle;\n      }),\n      activeTextStyle: this._children().map(function (child) {\n        return child.props.activeTextStyle;\n      }),\n      tabHeaderStyle: this._children().map(function (child) {\n        return _lodash2.default.get(child.props.heading.props, \"style\", undefined);\n      }),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n\n    if (overlayTabs) {\n      tabBarProps.style = _defineProperty({\n        position: \"absolute\",\n        left: 0,\n        right: 0\n      }, this.props.tabBarPosition === \"overlayTop\" ? \"top\" : \"bottom\", 0);\n    }\n\n    return React.createElement(View, {\n      style: [styles.container, this.props.style],\n      onLayout: this._handleLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      }\n    }, this.props.tabBarPosition === \"top\" && this.renderTabBar(tabBarProps), this.renderScrollableContent(), (this.props.tabBarPosition === \"bottom\" || overlayTabs) && this.renderTabBar(tabBarProps));\n  }\n});\nmodule.exports = ScrollableTabView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollableContentAndroid: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["../../../../src/basic/Tabs/index.js"],"names":["React","require","PropTypes","Component","Dimensions","View","Animated","ScrollView","StyleSheet","InteractionManager","Platform","ViewPropTypes","ReactNative","TimerMixin","SceneComponent","DefaultTabBar","ScrollableTabBar","ScrollableTabView","mixins","statics","propTypes","tabBarPosition","initialPage","page","onChangeTab","onScroll","renderTabBar","style","contentProps","scrollWithoutAnimation","locked","prerenderingSiblingsNumber","getDefaultProps","getInitialState","currentPage","scrollValue","containerWidth","sceneKeys","componentDidMount","scrollFn","x","animated","componentWillReceiveProps","props","children","goToPage","offset","pageNumber","y","callback","updateSceneKeys","newKeys","previousKeys","newSceneKeys","key","_shouldRenderSceneKey","numOfSibling","idx","currentPageKey","_keyExists","_makeSceneKey","child","renderScrollableContent","scenes","offsetX","e","_composeScenes","width","_onMomentumScrollBeginAndEnd","Math","_updateSelectedPage","localNextPage","nextPage","_onChangeTab","i","ref","from","_updateScrollValue","_handleLayout","_children","render","overlayTabs","tabBarProps","tabs","tabStyle","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","activeTab","position","left","right","styles","module","container","flex","scrollableContentAndroid"],"mappings":"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","sourcesContent":["const React = require(\"react\");\nconst { PropTypes, Component } = React;\nconst ReactNative = require(\"react-native\");\nconst {\n  Dimensions,\n  View,\n  Animated,\n  ScrollView,\n  StyleSheet,\n  InteractionManager,\n  Platform,\n  ViewPropTypes\n} = ReactNative;\nconst TimerMixin = require(\"react-timer-mixin\");\nimport _ from \"lodash\";\n\nconst SceneComponent = require(\"./SceneComponent\");\nconst { DefaultTabBar } = require(\"./DefaultTabBar\");\nconst { ScrollableTabBar } = require(\"./ScrollableTabBar\");\n\nconst ScrollableTabView = React.createClass({\n  mixins: [TimerMixin],\n  statics: {\n    DefaultTabBar,\n    ScrollableTabBar\n  },\n\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf([\n      \"top\",\n      \"bottom\",\n      \"overlayTop\",\n      \"overlayBottom\"\n    ]),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    style: ViewPropTypes.style,\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number\n  },\n\n  getDefaultProps() {\n    return {\n      tabBarPosition: \"top\",\n      initialPage: 0,\n      page: -1,\n      onChangeTab: () => {},\n      onScroll: () => {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0\n    };\n  },\n\n  getInitialState() {\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue: new Animated.Value(this.props.initialPage),\n      containerWidth: Dimensions.get(\"window\").width,\n      sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage })\n    };\n  },\n\n  componentDidMount() {\n    const scrollFn = () => {\n      if (this.scrollView && Platform.OS === \"android\") {\n        const x = this.props.initialPage * this.state.containerWidth;\n        this.scrollView.scrollTo({ x, animated: false });\n      }\n    };\n    this.setTimeout(() => {\n      InteractionManager.runAfterInteractions(scrollFn);\n    }, 0);\n  },\n\n  componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: props.children\n      });\n    }\n\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n\n  goToPage(pageNumber) {\n    const offset = pageNumber * this.state.containerWidth;\n    if (this.scrollView) {\n      this.scrollView.scrollTo({\n        x: offset,\n        y: 0,\n        animated: !this.props.scrollWithoutAnimation\n      });\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\n    });\n  },\n\n  renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    } else {\n      return <DefaultTabBar {...props} />;\n    }\n  },\n\n  updateSceneKeys({\n    page,\n    children = this.props.children,\n    callback = () => {}\n  }) {\n    let newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children\n    });\n    this.setState({ currentPage: page, sceneKeys: newKeys }, callback);\n  },\n\n  newSceneKeys({\n    previousKeys = [],\n    currentPage = 0,\n    children = this.props.children\n  }) {\n    let newKeys = [];\n    this._children(children).forEach((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      if (\n        this._keyExists(previousKeys, key) ||\n        this._shouldRenderSceneKey(idx, currentPage)\n      ) {\n        newKeys.push(key);\n      }\n    });\n    return newKeys;\n  },\n\n  _shouldRenderSceneKey(idx, currentPageKey) {\n    let numOfSibling = this.props.prerenderingSiblingsNumber;\n    return (\n      idx < currentPageKey + numOfSibling + 1 &&\n      idx > currentPageKey - numOfSibling - 1\n    );\n  },\n\n  _keyExists(sceneKeys, key) {\n    return sceneKeys.find(sceneKey => key === sceneKey);\n  },\n\n  _makeSceneKey(child, idx) {\n    return child.props.heading + \"_\" + idx;\n  },\n\n  renderScrollableContent() {\n    const scenes = this._composeScenes();\n    return (\n      <ScrollView\n        horizontal\n        pagingEnabled\n        automaticallyAdjustContentInsets={false}\n        contentOffset={{\n          x: this.props.initialPage * this.state.containerWidth\n        }}\n        ref={scrollView => {\n          this.scrollView = scrollView;\n        }}\n        onScroll={e => {\n          const offsetX = e.nativeEvent.contentOffset.x;\n          this._updateScrollValue(offsetX / this.state.containerWidth);\n        }}\n        onMomentumScrollBegin={this._onMomentumScrollBeginAndEnd}\n        onMomentumScrollEnd={this._onMomentumScrollBeginAndEnd}\n        scrollEventThrottle={16}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEnabled={!this.props.locked}\n        directionalLockEnabled\n        alwaysBounceVertical={false}\n        keyboardDismissMode=\"on-drag\"\n        {...this.props.contentProps}\n      >\n        {scenes}\n      </ScrollView>\n    );\n  },\n\n  _composeScenes() {\n    return this._children().map((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      return (\n        <SceneComponent\n          key={child.key}\n          shouldUpdated={this._shouldRenderSceneKey(\n            idx,\n            this.state.currentPage\n          )}\n          style={{ width: this.state.containerWidth }}\n        >\n          {this._keyExists(this.state.sceneKeys, key)\n            ? child\n            : <View heading={child.props.heading} />}\n        </SceneComponent>\n      );\n    });\n  },\n\n  _onMomentumScrollBeginAndEnd(e) {\n    const offsetX = e.nativeEvent.contentOffset.x;\n    const page = Math.round(offsetX / this.state.containerWidth);\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n\n  _updateSelectedPage(nextPage) {\n    let localNextPage = nextPage;\n    if (typeof localNextPage === \"object\") {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\n    });\n  },\n\n  _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage\n    });\n  },\n\n  _updateScrollValue(value) {\n    this.state.scrollValue.setValue(value);\n    this.props.onScroll(value);\n  },\n\n  _handleLayout(e) {\n    const { width } = e.nativeEvent.layout;\n\n    if (Math.round(width) !== Math.round(this.state.containerWidth)) {\n      this.setState({ containerWidth: width });\n      this.requestAnimationFrame(() => {\n        this.goToPage(this.state.currentPage);\n      });\n    }\n  },\n\n  _children(children = this.props.children) {\n    return React.Children.map(children, child => child);\n  },\n\n  render() {\n    let overlayTabs =\n      this.props.tabBarPosition === \"overlayTop\" ||\n      this.props.tabBarPosition === \"overlayBottom\";\n    let tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(child => child.props.heading),\n      tabStyle: this._children().map(child => child.props.tabStyle),\n      activeTabStyle: this._children().map(child => child.props.activeTabStyle),\n      textStyle: this._children().map(child => child.props.textStyle),\n      activeTextStyle: this._children().map(\n        child => child.props.activeTextStyle\n      ),\n      tabHeaderStyle: this._children().map(child =>\n        _.get(child.props.heading.props, \"style\", undefined)\n      ),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n    if (overlayTabs) {\n      tabBarProps.style = {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        [this.props.tabBarPosition === \"overlayTop\" ? \"top\" : \"bottom\"]: 0\n      };\n    }\n\n    return (\n      <View\n        style={[styles.container, this.props.style]}\n        onLayout={this._handleLayout}\n      >\n        {this.props.tabBarPosition === \"top\" && this.renderTabBar(tabBarProps)}\n        {this.renderScrollableContent()}\n        {(this.props.tabBarPosition === \"bottom\" || overlayTabs) &&\n          this.renderTabBar(tabBarProps)}\n      </View>\n    );\n  }\n});\n\nmodule.exports = ScrollableTabView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollableContentAndroid: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"script"}