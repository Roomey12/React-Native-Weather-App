{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\roomey\\\\Desktop\\\\react-native\\\\weatherapp\\\\components\\\\mycity\\\\MyCity.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { CityService } from \"../../services/city.service\";\nimport { WeatherService } from \"../../services/weather.service\";\nexport var MyCity = function MyCity() {\n  var _myCity$main, _myCity$main2, _myCity$main3, _myCity$main4, _myCity$wind, _myCity$wind2;\n\n  var cityService = new CityService();\n  var weatherService = new WeatherService();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      myCity = _useState2[0],\n      setMyCity = _useState2[1];\n\n  useEffect(function () {\n    cityService.getClientCity().then(function (el) {\n      console.log(el);\n      weatherService.getWeatherByCityName(el).then(function (el1) {\n        console.log(el1);\n        setMyCity(el1);\n      });\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"center\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"My City\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"City: \", myCity.name), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Temperature\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Feels like: \", (_myCity$main = myCity.main) == null ? void 0 : _myCity$main.feels_like), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Temperature: \", (_myCity$main2 = myCity.main) == null ? void 0 : _myCity$main2.temp), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Max Temperature: \", (_myCity$main3 = myCity.main) == null ? void 0 : _myCity$main3.temp_max), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Min Temperature: \", (_myCity$main4 = myCity.main) == null ? void 0 : _myCity$main4.temp_min), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Wind\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Speed: \", (_myCity$wind = myCity.wind) == null ? void 0 : _myCity$wind.speed, \" m/s\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Degree: \", (_myCity$wind2 = myCity.wind) == null ? void 0 : _myCity$wind2.deg, \" \\xB0\"));\n};","map":{"version":3,"sources":["C:/Users/roomey/Desktop/react-native/weatherapp/components/mycity/MyCity.js"],"names":["React","useState","useEffect","CityService","WeatherService","MyCity","cityService","weatherService","myCity","setMyCity","getClientCity","then","el","console","log","getWeatherByCityName","el1","textAlignVertical","textAlign","name","main","feels_like","temp","temp_max","temp_min","wind","speed","deg"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,WAAT;AACA,SAASC,cAAT;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAC1B,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;AACA,MAAMI,cAAc,GAAG,IAAIH,cAAJ,EAAvB;;AAF0B,kBAIEH,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,MAInBO,MAJmB;AAAA,MAIXC,SAJW;;AAM1BP,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,WAAW,CAACI,aAAZ,GAA4BC,IAA5B,CAAiC,UAACC,EAAD,EAAQ;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAL,MAAAA,cAAc,CAACQ,oBAAf,CAAoCH,EAApC,EAAwCD,IAAxC,CAA6C,UAACK,GAAD,EAAS;AACpDH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAP,QAAAA,SAAS,CAACO,GAAD,CAAT;AACD,OAHD;AAID,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,iBAAiB,EAAE,QAArB;AAA+BC,MAAAA,SAAS,EAAE;AAA1C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaV,MAAM,CAACW,IAApB,CALF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAmBX,MAAM,CAACY,IAA1B,qBAAmB,aAAaC,UAAhC,CAPF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAoBb,MAAM,CAACY,IAA3B,qBAAoB,cAAaE,IAAjC,CARF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAwBd,MAAM,CAACY,IAA/B,qBAAwB,cAAaG,QAArC,CATF,EAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAwBf,MAAM,CAACY,IAA/B,qBAAwB,cAAaI,QAArC,CAVF,EAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAchB,MAAM,CAACiB,IAArB,qBAAc,aAAaC,KAA3B,SAZF,EAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAelB,MAAM,CAACiB,IAAtB,qBAAe,cAAaE,GAA5B,UAbF,CADF;AAoBD,CApCM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { CityService } from \"../../services/city.service\";\nimport { WeatherService } from \"../../services/weather.service\";\n\nexport const MyCity = () => {\n  const cityService = new CityService();\n  const weatherService = new WeatherService();\n\n  const [myCity, setMyCity] = useState({});\n\n  useEffect(() => {\n    cityService.getClientCity().then((el) => {\n      console.log(el);\n      weatherService.getWeatherByCityName(el).then((el1) => {\n        console.log(el1);\n        setMyCity(el1);\n      });\n    });\n  }, []);\n\n  return (\n    <View>\n      <Text style={{ textAlignVertical: \"center\", textAlign: \"center\" }}>\n        My City\n      </Text>\n\n      <Text>City: {myCity.name}</Text>\n      <Text>Temperature</Text>\n      <Text>Feels like: {myCity.main?.feels_like}</Text>\n      <Text>Temperature: {myCity.main?.temp}</Text>\n      <Text>Max Temperature: {myCity.main?.temp_max}</Text>\n      <Text>Min Temperature: {myCity.main?.temp_min}</Text>\n      <Text>Wind</Text>\n      <Text>Speed: {myCity.wind?.speed} m/s</Text>\n      <Text>Degree: {myCity.wind?.deg} &#176;</Text>\n\n      {/*<Text>Cloudiness: {myCity.clouds} %</Text>*/}\n      {/*<Text>Humidity: {myCity.main?.humidity}</Text>*/}\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}