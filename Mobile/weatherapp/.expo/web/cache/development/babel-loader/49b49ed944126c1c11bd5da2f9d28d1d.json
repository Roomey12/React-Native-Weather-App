{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\roomey\\\\Desktop\\\\react-native\\\\weatherapp\\\\components\\\\mycity\\\\MyCity.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { CityService } from \"../../services/city.service\";\nimport { WeatherService } from \"../../services/weather.service\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nexport var MyCity = function MyCity() {\n  var _myCity$main, _myCity$main2, _myCity$main3, _myCity$main4, _myCity$wind, _myCity$wind2, _myCity$sys, _myCity$sys2, _myCity$clouds, _myCity$main5, _myCity$weather, _myCity$weather2;\n\n  var cityService = new CityService();\n  var weatherService = new WeatherService();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      myCity = _useState2[0],\n      setMyCity = _useState2[1];\n\n  useEffect(function () {\n    cityService.getClientCity().then(function (el) {\n      console.log(el);\n      weatherService.getWeatherByCityName(el).then(function (el1) {\n        console.log(el1);\n        setMyCity(el1);\n      });\n    });\n  }, []);\n  return React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Card.Title, {\n    title: myCity.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Temperature\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Temperature: \", (_myCity$main = myCity.main) == null ? void 0 : _myCity$main.temp, \" \\xB0C\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Feels like: \", (_myCity$main2 = myCity.main) == null ? void 0 : _myCity$main2.feels_like, \" \\xB0C\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Max Temperature: \", (_myCity$main3 = myCity.main) == null ? void 0 : _myCity$main3.temp_max, \" \\xB0C\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Min Temperature: \", (_myCity$main4 = myCity.main) == null ? void 0 : _myCity$main4.temp_min, \" \\xB0C\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Wind\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Speed: \", (_myCity$wind = myCity.wind) == null ? void 0 : _myCity$wind.speed, \" m/s\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Degree: \", (_myCity$wind2 = myCity.wind) == null ? void 0 : _myCity$wind2.deg, \" \\xB0\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Miscellaneous\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Sunrise:\", \" \", new Date(((_myCity$sys = myCity.sys) == null ? void 0 : _myCity$sys.sunrise) * 1000 || Date.now()).toLocaleTimeString()), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Sunset:\", \" \", new Date(((_myCity$sys2 = myCity.sys) == null ? void 0 : _myCity$sys2.sunset) * 1000 || Date.now()).toLocaleTimeString()), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Cloudiness: \", (_myCity$clouds = myCity.clouds) == null ? void 0 : _myCity$clouds.all, \" %\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Humidity: \", (_myCity$main5 = myCity.main) == null ? void 0 : _myCity$main5.humidity, \" %\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Weather\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Main: \", (_myCity$weather = myCity.weather) == null ? void 0 : _myCity$weather.shift().main), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Description: \", (_myCity$weather2 = myCity.weather) == null ? void 0 : _myCity$weather2.shift().description), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Main:\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/roomey/Desktop/react-native/weatherapp/components/mycity/MyCity.js"],"names":["React","useState","useEffect","CityService","WeatherService","Avatar","Button","Card","Title","Paragraph","MyCity","cityService","weatherService","myCity","setMyCity","getClientCity","then","el","console","log","getWeatherByCityName","el1","name","main","temp","feels_like","temp_max","temp_min","wind","speed","deg","Date","sys","sunrise","now","toLocaleTimeString","sunset","clouds","all","humidity","weather","shift","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { CityService } from \"../../services/city.service\";\nimport { WeatherService } from \"../../services/weather.service\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\n\nexport const MyCity = () => {\n  const cityService = new CityService();\n  const weatherService = new WeatherService();\n  const [myCity, setMyCity] = useState({});\n\n  useEffect(() => {\n    cityService.getClientCity().then((el) => {\n      console.log(el);\n      weatherService.getWeatherByCityName(el).then((el1) => {\n        console.log(el1);\n        setMyCity(el1);\n      });\n    });\n  }, []);\n\n  // const LeftContent = (props) => <Avatar.Icon {...props} icon=\"\" />;\n\n  return (\n    <Card>\n      <Card.Title title={myCity.name} />\n      <Card.Content>\n        <Title>Temperature</Title>\n        <Paragraph>Temperature: {myCity.main?.temp} &#176;C</Paragraph>\n        <Paragraph>Feels like: {myCity.main?.feels_like} &#176;C</Paragraph>\n        <Paragraph>Max Temperature: {myCity.main?.temp_max} &#176;C</Paragraph>\n        <Paragraph>Min Temperature: {myCity.main?.temp_min} &#176;C</Paragraph>\n        <Paragraph></Paragraph>\n      </Card.Content>\n      <Card.Content>\n        <Title>Wind</Title>\n        <Paragraph>Speed: {myCity.wind?.speed} m/s</Paragraph>\n        <Paragraph>Degree: {myCity.wind?.deg} &#176;</Paragraph>\n        <Paragraph></Paragraph>\n      </Card.Content>\n      <Card.Content>\n        <Title>Miscellaneous</Title>\n        <Paragraph>\n          Sunrise:{\" \"}\n          {new Date(\n            myCity.sys?.sunrise * 1000 || Date.now()\n          ).toLocaleTimeString()}\n        </Paragraph>\n        <Paragraph>\n          Sunset:{\" \"}\n          {new Date(\n            myCity.sys?.sunset * 1000 || Date.now()\n          ).toLocaleTimeString()}\n        </Paragraph>\n        <Paragraph>Cloudiness: {myCity.clouds?.all} %</Paragraph>\n        <Paragraph>Humidity: {myCity.main?.humidity} %</Paragraph>\n        <Paragraph></Paragraph>\n      </Card.Content>\n      <Card.Content>\n        <Title>Weather</Title>\n        <Paragraph>Main: {myCity.weather?.shift().main}</Paragraph>\n        <Paragraph>\n          Description: {myCity.weather?.shift().description}\n        </Paragraph>\n        <Paragraph>Main:</Paragraph>\n        <Paragraph></Paragraph>\n      </Card.Content>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}