{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var CityService = function () {\n  function CityService() {\n    _classCallCheck(this, CityService);\n\n    this.url = \"http://185.143.147.199/api/city\";\n  }\n\n  _createClass(CityService, [{\n    key: \"getAllCities\",\n    value: function getAllCities() {\n      var request;\n      return _regeneratorRuntime.async(function getAllCities$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(this.url));\n\n            case 2:\n              request = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(request.json());\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getCityByName\",\n    value: function getCityByName(name) {\n      var request;\n      return _regeneratorRuntime.async(function getCityByName$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch(this.url + \"/\" + name));\n\n            case 2:\n              request = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(request.json());\n\n            case 5:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return CityService;\n}();\nvar x = new CityService();\nx.getAllCities();","map":{"version":3,"sources":["C:/Users/roomey/Desktop/react-native/weatherapp/services/city.service.js"],"names":["CityService","url","fetch","request","json","name","x","getAllCities"],"mappings":";;;AAAA,WAAaA,WAAb;AAEE,yBAAc;AAAA;;AACZ,SAAKC,GAAL,GAAW,iCAAX;AACD;;AAJH;AAAA;AAAA,WAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBC,KAAK,CAAC,KAAKD,GAAN,CAD7B;;AAAA;AACQE,cAAAA,OADR;AAAA;AAAA,+CAEeA,OAAO,CAACC,IAAR,EAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA,WAWE,uBAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBH,KAAK,CAAC,KAAKD,GAAL,GAAW,GAAX,GAAiBI,IAAlB,CAD7B;;AAAA;AACQF,cAAAA,OADR;AAAA;AAAA,+CAEeA,OAAO,CAACC,IAAR,EAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;;AAAA;AAAA;AAiBA,IAAIE,CAAC,GAAG,IAAIN,WAAJ,EAAR;AACAM,CAAC,CAACC,YAAF","sourcesContent":["export class CityService {\r\n  url;\r\n  constructor() {\r\n    this.url = \"http://185.143.147.199/api/city\";\r\n  }\r\n\r\n  async getAllCities() {\r\n    const request = await fetch(this.url);\r\n    return await request.json();\r\n  }\r\n\r\n  async getCityByName(name) {\r\n    const request = await fetch(this.url + \"/\" + name);\r\n    return await request.json();\r\n  }\r\n}\r\n\r\nvar x = new CityService();\r\nx.getAllCities();\r\n"]},"metadata":{},"sourceType":"module"}