{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\roomey\\\\Desktop\\\\react-native\\\\weatherapp\\\\components\\\\all-cities\\\\All-Cities.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { CityService } from \"../../services/city.service\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport var AllCities = function AllCities() {\n  var _useParams = useParams(),\n      isStar = _useParams.isStar;\n\n  var history = useHistory();\n  var cityService = new CityService();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cities = _useState2[0],\n      setCities = _useState2[1];\n\n  useEffect(function () {\n    if (isStar) {\n      AsyncStorage.getItem(\"star\").then(function (el) {\n        if (el) {\n          cityService.getCitiesByIds(el).then(function (x) {\n            setCities(x);\n          });\n        }\n      });\n    } else {\n      cityService.getAllCities().then(function (el) {\n        setCities(el);\n      });\n    }\n  }, []);\n\n  var navigateToCity = function navigateToCity(cityId) {\n    history.push(\"/city/\" + cityId);\n  };\n\n  var isCityStar = function isCityStar(id) {\n    var star, result, ids, index;\n    return _regeneratorRuntime.async(function isCityStar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"star\"));\n\n          case 2:\n            star = _context.sent;\n            result = false;\n\n            if (star) {\n              ids = star.split(\"_\");\n              index = ids.indexOf(id.toString());\n              result = index >= 0;\n            }\n\n            return _context.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var proceedStar = function proceedStar(id) {\n    var star, result, ids, index;\n    return _regeneratorRuntime.async(function proceedStar$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"star\"));\n\n          case 2:\n            star = _context2.sent;\n            result = \"\";\n\n            if (star) {\n              ids = star.split(\"_\");\n              index = ids.indexOf(id.toString());\n\n              if (index >= 0) {\n                ids.splice(index, 1);\n              } else {\n                ids.push(id);\n              }\n\n              ids.forEach(function (el) {\n                if (el !== \"\") {\n                  result += el + \"_\";\n                }\n              });\n            } else {\n              result = id + \"_\";\n            }\n\n            result = result.slice(0, -1);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"star\", result));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return cities == null ? void 0 : cities.map(function (el) {\n    return React.createElement(View, {\n      key: el.id,\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../images/goldenStar.png\"),\n      style: styles.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), React.createElement(Card, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, React.createElement(Card.Content, {\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return proceedStar(el.id);\n      },\n      style: [styles.image, styles.background],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../images/goldenStar.png\"),\n      style: styles.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigateToCity(el.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [styles.text, styles.star],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, el.name)))));\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    marginLeft: 5,\n    flexDirection: \"row\",\n    fontSize: 25\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  text: {\n    marginLeft: 25\n  },\n  star: {\n    marginLeft: 15,\n    fontSize: 32\n  },\n  header: {\n    color: \"white\",\n    flex: 1,\n    margin: 5\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  image: {\n    weight: 50,\n    height: 50\n  },\n  backGround: {\n    background: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/roomey/Desktop/react-native/weatherapp/components/all-cities/All-Cities.js"],"names":["React","useState","useEffect","CityService","AsyncStorage","useHistory","useParams","Avatar","Button","Card","Title","Paragraph","AllCities","isStar","history","cityService","cities","setCities","getItem","then","el","getCitiesByIds","x","getAllCities","navigateToCity","cityId","push","isCityStar","id","star","result","ids","split","index","indexOf","toString","proceedStar","splice","forEach","slice","setItem","map","styles","container","require","image","header","row","background","text","name","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","marginLeft","flexDirection","fontSize","item","padding","marginVertical","marginHorizontal","color","margin","weight","height","backGround"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CityService } from \"../../services/city.service\";\nimport {\n  View,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  AsyncStorage,\n} from \"react-native\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nimport { Image } from \"react-native-web\";\n\nexport const AllCities = () => {\n  const { isStar } = useParams();\n  const history = useHistory();\n  const cityService = new CityService();\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    if (isStar) {\n      AsyncStorage.getItem(\"star\").then((el) => {\n        if (el) {\n          cityService.getCitiesByIds(el).then((x) => {\n            setCities(x);\n          });\n        }\n      });\n    } else {\n      cityService.getAllCities().then((el) => {\n        setCities(el);\n      });\n    }\n  }, []);\n\n  const navigateToCity = (cityId) => {\n    history.push(`/city/${cityId}`);\n  };\n\n  const isCityStar = async (id) => {\n    const star = await AsyncStorage.getItem(\"star\");\n    let result = false;\n    if (star) {\n      const ids = star.split(\"_\");\n      let index = ids.indexOf(id.toString());\n      result = index >= 0;\n    }\n    return result;\n  };\n\n  const proceedStar = async (id) => {\n    const star = await AsyncStorage.getItem(\"star\");\n    let result = \"\";\n    if (star) {\n      const ids = star.split(\"_\");\n      let index = ids.indexOf(id.toString());\n      if (index >= 0) {\n        ids.splice(index, 1);\n      } else {\n        ids.push(id);\n      }\n      ids.forEach((el) => {\n        if (el !== \"\") {\n          result += el + \"_\";\n        }\n      });\n    } else {\n      result = id + \"_\";\n    }\n    result = result.slice(0, -1);\n    await AsyncStorage.setItem(\"star\", result);\n  };\n\n  return cities?.map((el) => {\n    return (\n      <View key={el.id} style={styles.container}>\n        <Image\n          source={require(\"../../images/goldenStar.png\")}\n          style={styles.image}\n        />\n        <Card style={styles.header}>\n          <Card.Content style={styles.row}>\n            <TouchableOpacity\n              onPress={() => proceedStar(el.id)}\n              style={[styles.image, styles.background]}\n            >\n              <Image\n                source={require(\"../../images/goldenStar.png\")}\n                style={styles.image}\n              />\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => navigateToCity(el.id)}>\n              <Text style={[styles.text, styles.star]}>{el.name}</Text>\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n    );\n  });\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    marginLeft: 5,\n    flexDirection: \"row\",\n    fontSize: 25,\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  text: {\n    marginLeft: 25,\n  },\n  star: {\n    marginLeft: 15,\n    fontSize: 32,\n  },\n  header: {\n    color: \"white\",\n    flex: 1,\n    margin: 5,\n  },\n  row: {\n    flexDirection: \"row\",\n  },\n  image: {\n    weight: 50,\n    height: 50,\n  },\n  backGround: {\n    background: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}