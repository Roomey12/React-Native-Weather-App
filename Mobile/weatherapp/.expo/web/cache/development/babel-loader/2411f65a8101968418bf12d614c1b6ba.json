{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\roomey\\\\Desktop\\\\react-native\\\\weatherapp\\\\components\\\\all-cities\\\\All-Cities.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { CityService } from \"../../services/city.service\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { useHistory, useParams } from \"react-router\";\nexport var AllCities = function AllCities() {\n  var _useParams = useParams(),\n      isStar = _useParams.isStar;\n\n  var history = useHistory();\n  var cityService = new CityService();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cities = _useState2[0],\n      setCities = _useState2[1];\n\n  useEffect(function () {\n    if (isStar) {\n      AsyncStorage.getItem(\"star\").then(function (el) {\n        if (el) {\n          cityService.getCitiesByIds(el).then(function (x) {\n            setCities(x);\n          });\n        }\n      });\n    } else {\n      cityService.getAllCities().then(function (el) {\n        setCities(el);\n      });\n    }\n  }, []);\n\n  var navigateToCity = function navigateToCity(cityId) {\n    history.push(\"/city/\" + cityId);\n  };\n\n  var isCityStar = function isCityStar(id) {\n    var star, result, ids, index;\n    return _regeneratorRuntime.async(function isCityStar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"star\"));\n\n          case 2:\n            star = _context.sent;\n            result = false;\n\n            if (star) {\n              ids = star.split(\"_\");\n              index = ids.indexOf(id.toString());\n              result = index >= 0;\n            }\n\n            return _context.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var proceedStar = function proceedStar(id) {\n    var star, result, ids, index;\n    return _regeneratorRuntime.async(function proceedStar$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"star\"));\n\n          case 2:\n            star = _context2.sent;\n            result = \"\";\n\n            if (star) {\n              ids = star.split(\"_\");\n              index = ids.indexOf(id.toString());\n\n              if (index >= 0) {\n                ids.splice(index, 1);\n              } else {\n                ids.push(id);\n              }\n\n              ids.forEach(function (el) {\n                if (el !== \"\") {\n                  result += el + \"_\";\n                }\n              });\n            } else {\n              result = id + \"_\";\n            }\n\n            result = result.slice(0, -1);\n            console.log(result);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"star\", result));\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(\"RETURN\");\n  console.log(cities);\n  return cities.map(function (el) {\n    return React.createElement(View, {\n      key: el.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return proceedStar(el.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"\\u2605\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigateToCity(el.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, el.name)));\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});","map":{"version":3,"sources":["C:/Users/roomey/Desktop/react-native/weatherapp/components/all-cities/All-Cities.js"],"names":["React","useState","useEffect","CityService","AsyncStorage","useHistory","useParams","AllCities","isStar","history","cityService","cities","setCities","getItem","then","el","getCitiesByIds","x","getAllCities","navigateToCity","cityId","push","isCityStar","id","star","result","ids","split","index","indexOf","toString","proceedStar","splice","forEach","slice","console","log","setItem","map","name","styles","StyleSheet","create","container","flex","marginTop","StatusBar","currentHeight","item","padding","marginVertical","marginHorizontal","title","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CityService } from \"../../services/city.service\";\nimport {\n  View,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  AsyncStorage,\n} from \"react-native\";\nimport { useHistory, useParams } from \"react-router\";\n\nexport const AllCities = () => {\n  const { isStar } = useParams();\n  const history = useHistory();\n  const cityService = new CityService();\n  const [cities, setCities] = useState([]);\n  //const [star, setStar] = useState(\"\");\n\n  useEffect(() => {\n    if (isStar) {\n      AsyncStorage.getItem(\"star\").then((el) => {\n        //const star = el;\n        if (el) {\n          // const starIds = star.split(\"_\");\n          // console.log(\"IDS\");\n          // console.log(starIds);\n          cityService.getCitiesByIds(el).then((x) => {\n            setCities(x);\n          });\n          // let starCitiesHelper = [];\n          // starIds.forEach((id) => {\n          //   console.log(\"SETTING ID \" + id);\n          //   cityService.getCityById(id).then((el) => {\n          //     console.log(\"PUSHING ID \" + id);\n          //     starCitiesHelper.push(el);\n          //     if (id === starIds[starIds.length - 1]) {\n          //       setCities(starCitiesHelper);\n          //     }\n          //   });\n          // });\n        }\n      });\n      //}\n      // if (star) {\n      //   const starIds = star.split(\"_\");\n      //   console.log(\"IDS\");\n      //   console.log(starIds);\n      //   console.log();\n      //   let starCitiesHelper = [];\n      //   starIds.forEach((id) => {\n      //     if (id !== \"\") {\n      //       cityService.getCityById(id).then((el) => {\n      //         starCitiesHelper.push(el);\n      //       });\n      //     }\n      //   });\n      //   setCities(starCitiesHelper);\n      //   console.log(\"CITIES\");\n      //   console.log(cities);\n      //   console.log();\n      // cityService.getCities(...starIds).then((el) => {\n      //   setCities(el);\n      // });\n      //}\n    } else {\n      cityService.getAllCities().then((el) => {\n        setCities(el);\n      });\n    }\n  }, []);\n\n  const navigateToCity = (cityId) => {\n    history.push(`/city/${cityId}`);\n  };\n\n  const isCityStar = async (id) => {\n    const star = await AsyncStorage.getItem(\"star\");\n    let result = false;\n    if (star) {\n      const ids = star.split(\"_\");\n      let index = ids.indexOf(id.toString());\n      result = index >= 0;\n    }\n    return result;\n  };\n\n  const proceedStar = async (id) => {\n    const star = await AsyncStorage.getItem(\"star\");\n    let result = \"\";\n    if (star) {\n      const ids = star.split(\"_\");\n      let index = ids.indexOf(id.toString());\n      if (index >= 0) {\n        ids.splice(index, 1);\n      } else {\n        ids.push(id);\n      }\n      ids.forEach((el) => {\n        if (el !== \"\") {\n          result += el + \"_\";\n        }\n      });\n    } else {\n      result = id + \"_\";\n    }\n    result = result.slice(0, -1);\n    console.log(result);\n    await AsyncStorage.setItem(\"star\", result);\n  };\n\n  console.log(\"RETURN\");\n  console.log(cities);\n  return cities.map((el) => {\n    return (\n      <View key={el.id}>\n        <TouchableOpacity onPress={() => proceedStar(el.id)}>\n          <Text>&#9733;</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => navigateToCity(el.id)}>\n          <Text>{el.name}</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  });\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}