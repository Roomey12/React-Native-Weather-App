{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\roomey\\\\Desktop\\\\react-native\\\\weatherapp\\\\node_modules\\\\react-native-easy-grid\\\\Components\\\\Grid.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport computeProps from \"../Utils/computeProps\";\nimport _ from 'lodash';\nimport Col from \"./Col\";\nimport Row from \"./Row\";\n\nvar GridNB = function (_Component) {\n  _inherits(GridNB, _Component);\n\n  var _super = _createSuper(GridNB);\n\n  function GridNB() {\n    _classCallCheck(this, GridNB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GridNB, [{\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var type = {\n        flex: 1,\n        flexDirection: this.ifRow() ? 'column' : 'row'\n      };\n      var defaultProps = {\n        style: type\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"ifRow\",\n    value: function ifRow() {\n      var row = false;\n      React.Children.forEach(this.props.children, function (child) {\n        if (child.type == Row) row = true;\n      });\n      return row;\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, _extends({\n        ref: function ref(component) {\n          return _this._root = component;\n        }\n      }, this.props, this.prepareRootProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return GridNB;\n}(Component);\n\nexport { GridNB as default };","map":{"version":3,"sources":["C:/Users/roomey/Desktop/react-native/weatherapp/node_modules/react-native-easy-grid/Components/Grid.js"],"names":["React","Component","computeProps","_","Col","Row","GridNB","type","flex","flexDirection","ifRow","defaultProps","style","props","row","Children","forEach","children","child","nativeProps","_root","setNativeProps","component","prepareRootProps"],"mappings":"AACA;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAOC,YAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,GAAP;AACA,OAAOC,GAAP;;IAGqBC,M;;;;;;;;;;;;;WACjB,4BAAmB;AAEf,UAAIC,IAAI,GAAG;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,aAAa,EAAE,KAAKC,KAAL,KAAe,QAAf,GAA0B;AAFlC,OAAX;AAKA,UAAIC,YAAY,GAAG;AACfC,QAAAA,KAAK,EAAEL;AADQ,OAAnB;AAIA,aAAOL,YAAY,CAAC,KAAKW,KAAN,EAAaF,YAAb,CAAnB;AAEH;;;WAED,iBAAQ;AACJ,UAAIG,GAAG,GAAG,KAAV;AACAd,MAAAA,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuB,KAAKH,KAAL,CAAWI,QAAlC,EAA4C,UAAUC,KAAV,EAAiB;AACzD,YAAGA,KAAK,CAACX,IAAN,IAAcF,GAAjB,EACIS,GAAG,GAAG,IAAN;AACP,OAHD;AAIA,aAAOA,GAAP;AACH;;;WAED,wBAAeK,WAAf,EAA4B;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;WAED,kBAAS;AAAA;;AACL,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAE,aAAAG,SAAS;AAAA,iBAAI,KAAI,CAACF,KAAL,GAAaE,SAAjB;AAAA;AADhB,SAEM,KAAKT,KAFX,EAGM,KAAKU,gBAAL,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,KAAKV,KAAL,CAAWI,QAJb,CADF;AAOH;;;;EArC+BhB,S;;SAAfK,M","sourcesContent":["/* @flow */\n'use strict';\n\nimport React, {Component} from 'react';\nimport {View, } from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport _ from 'lodash';\nimport Col from './Col';\nimport Row from './Row';\n\n\nexport default class GridNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n            flex: 1,\n            flexDirection: this.ifRow() ? 'column' : 'row'\n        }\n\n        var defaultProps = {\n            style: type\n        }\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    ifRow() {\n        var row = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(child.type == Row)\n                row = true;\n        })\n        return row;\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n    render() {\n        return(\n          <View\n            ref={component => this._root = component}\n            {...this.props}\n            {...this.prepareRootProps()}\n          >{this.props.children}</View>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}