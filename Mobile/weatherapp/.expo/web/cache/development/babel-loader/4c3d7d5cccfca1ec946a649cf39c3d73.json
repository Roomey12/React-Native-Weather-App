{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Card = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/Card.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _mapPropsToStyleNames = require(\"../Utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Card = function (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    _classCallCheck(this, Card);\n\n    return _possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.dataArray && this.props.renderRow) {\n        var ds = new _reactNative.ListView.DataSource({\n          rowHasChanged: function rowHasChanged(r1, r2) {\n            return r1 !== r2;\n          }\n        });\n        var dataSource = ds.cloneWithRows(this.props.dataArray);\n        return _react2.default.createElement(_reactNative.ListView, _extends({}, this.props, {\n          enableEmptySections: true,\n          dataSource: dataSource,\n          renderRow: this.props.renderRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          }\n        }));\n      }\n\n      return _react2.default.createElement(_reactNative.View, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return Card;\n}(_react.Component);\n\nCard.propTypes = _extends({}, _reactNative.ViewPropTypes, {\n  style: _react2.default.PropTypes.object,\n  dataArray: _react2.default.PropTypes.object,\n  renderRow: _react2.default.PropTypes.object\n});\nvar StyledCard = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Card\", {}, _mapPropsToStyleNames2.default)(Card);\nexports.Card = StyledCard;","map":{"version":3,"sources":["../../../src/basic/Card.js"],"names":["Card","ds","rowHasChanged","r1","dataSource","style","dataArray","renderRow","StyledCard"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;;;AAGA,IAAA,uBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,I;;;;;;;;;;;6BACK;AAAA,UAAA,MAAA,GAAA,IAAA;;AACP,UAAI,KAAA,KAAA,CAAA,SAAA,IAAwB,KAAA,KAAA,CAA5B,SAAA,EAAkD;AAChD,YAAMC,EAAAA,GAAK,IAAI,YAAA,CAAA,QAAA,CAAJ,UAAA,CAAwB;AACjCC,UAAAA,aAAAA,EAAe,SAAA,aAAA,CAAA,EAAA,EAAA,EAAA,EAAA;AAAA,mBAAYC,EAAAA,KAAZ,EAAA;AADjB;AAAmC,SAAxB,CAAX;AAGA,YAAMC,UAAAA,GAAaH,EAAAA,CAAAA,aAAAA,CAAiB,KAAA,KAAA,CAApC,SAAmBA,CAAnB;AACA,eACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,YAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,KAAA,EAAA;AAEE,UAAA,mBAAA,EAFF,IAAA;AAGE,UAAA,UAAA,EAHF,UAAA;AAIE,UAAA,SAAA,EAAW,KAAA,KAAA,CAJb,SAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EADF;AACE;AAAA,SAAA,CAAA,CADF;AAQD;;AACD,aACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,YAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,QAAA,GAAA,EAAK,SAAA,GAAA,CAAA,CAAA,EAAA;AAAA,iBAAM,MAAA,CAAA,KAAA,GAAN,CAAA;AAAX;AAAA,OAAA,EAAsC,KAAtC,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EACG,KAAA,KAAA,CAFL,QACE,CADF;;;;;;;AAQJD,IAAAA,CAAAA,SAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EAAAA,YAAAA,CAAAA,aAAAA,EAAAA;AAEEK,EAAAA,KAAAA,EAAO,OAAA,CAAA,OAAA,CAAA,SAAA,CAFTL,MAAAA;AAGEM,EAAAA,SAAAA,EAAW,OAAA,CAAA,OAAA,CAAA,SAAA,CAHbN,MAAAA;AAIEO,EAAAA,SAAAA,EAAW,OAAA,CAAA,OAAA,CAAA,SAAA,CAJbP;AAAAA,CAAAA,CAAAA;AAOA,IAAMQ,UAAAA,GAAa,CAAA,GAAA,uBAAA,CAAA,YAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,sBAAA,CAAA,OAAA,EAAnB,IAAmB,CAAnB;QAIuBR,I,GAAdQ,U","sourcesContent":["import React, { Component } from \"react\";\nimport { View, ListView, ViewPropTypes } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass Card extends Component {\n  render() {\n    if (this.props.dataArray && this.props.renderRow) {\n      const ds = new ListView.DataSource({\n        rowHasChanged: (r1, r2) => r1 !== r2\n      });\n      const dataSource = ds.cloneWithRows(this.props.dataArray);\n      return (\n        <ListView\n          {...this.props}\n          enableEmptySections\n          dataSource={dataSource}\n          renderRow={this.props.renderRow}\n        />\n      );\n    }\n    return (\n      <View ref={c => (this._root = c)} {...this.props}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nCard.propTypes = {\n  ...ViewPropTypes,\n  style: React.PropTypes.object,\n  dataArray: React.PropTypes.object,\n  renderRow: React.PropTypes.object\n};\n\nconst StyledCard = connectStyle(\"NativeBase.Card\", {}, mapPropsToStyleNames)(\n  Card\n);\n\nexport { StyledCard as Card };\n"]},"metadata":{},"sourceType":"script"}