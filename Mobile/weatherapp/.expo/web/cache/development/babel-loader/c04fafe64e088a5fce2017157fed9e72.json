{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = undefined;\nvar _jsxFileName = \"src/basic/Button.js\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _platform = require(\"./../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _Text = require(\"./Text\");\n\nvar _computeProps = require(\"../Utils/computeProps\");\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nvar _mapPropsToStyleNames = require(\"../Utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: \"getInitialStyle\",\n    value: function getInitialStyle() {\n      return {\n        borderedBtn: {\n          borderWidth: this.props.bordered ? 1 : undefined,\n          borderRadius: this.props.rounded && this.props.bordered ? _platform2.default.borderRadiusLarge : 2\n        }\n      };\n    }\n  }, {\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var defaultProps = {\n        style: this.getInitialStyle().borderedBtn\n      };\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = _reactNative.Platform.OS === \"ios\" ? this.props.children : _react2.default.Children.map(this.props.children, function (child) {\n        return child && child.type === _Text.Text ? _react2.default.cloneElement(child, _extends({\n          uppercase: true\n        }, child.props)) : child;\n      });\n\n      if (_reactNative.Platform.OS === \"ios\" || _platform2.default.androidRipple === false || _reactNative.Platform[\"Version\"] <= 21) {\n        return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({}, this.prepareRootProps(), {\n          ref: function ref(c) {\n            return _this2._root = c;\n          },\n          activeOpacity: this.props.activeOpacity ? this.props.activeOpacity : 0.5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          }\n        }), children);\n      } else {\n        return _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n          ref: function ref(c) {\n            return _this2._root = c;\n          },\n          onPress: this.props.onPress,\n          background: this.props.androidRippleColor ? _reactNative.TouchableNativeFeedback.Ripple(this.props.androidRippleColor) : _reactNative.TouchableNativeFeedback.Ripple(_platform2.default.androidRippleColor)\n        }, this.prepareRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          }\n        }), _react2.default.createElement(_reactNative.View, _extends({}, this.prepareRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }), children));\n      }\n    }\n  }]);\n\n  return Button;\n}(_react.Component);\n\nButton.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  style: _react2.default.PropTypes.object,\n  block: _react2.default.PropTypes.bool,\n  primary: _react2.default.PropTypes.bool,\n  transparent: _react2.default.PropTypes.bool,\n  success: _react2.default.PropTypes.bool,\n  danger: _react2.default.PropTypes.bool,\n  warning: _react2.default.PropTypes.bool,\n  info: _react2.default.PropTypes.bool,\n  bordered: _react2.default.PropTypes.bool,\n  disabled: _react2.default.PropTypes.bool,\n  rounded: _react2.default.PropTypes.bool,\n  large: _react2.default.PropTypes.bool,\n  small: _react2.default.PropTypes.bool,\n  active: _react2.default.PropTypes.bool\n});\nvar StyledButton = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Button\", {}, _mapPropsToStyleNames2.default)(Button);\nexports.Button = StyledButton;","map":{"version":3,"sources":["../../../src/basic/Button.js"],"names":["Button","borderedBtn","borderWidth","borderRadius","defaultProps","style","children","child","uppercase","block","primary","transparent","success","danger","warning","info","bordered","disabled","rounded","large","small","active","StyledButton"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport React, { Component } from \"react\";\nimport {\n  TouchableOpacity,\n  Platform,\n  View,\n  TouchableNativeFeedback\n} from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variables from \"./../theme/variables/platform\";\nimport { Text } from \"./Text\";\nimport computeProps from \"../Utils/computeProps\";\n\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass Button extends Component {\n  getInitialStyle() {\n    return {\n      borderedBtn: {\n        borderWidth: this.props.bordered ? 1 : undefined,\n        borderRadius: this.props.rounded && this.props.bordered\n          ? variables.borderRadiusLarge\n          : 2\n      }\n    };\n  }\n\n  _root: React$Element<TouchableOpacity | TouchableNativeFeedback>;\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().borderedBtn\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    const children = Platform.OS === \"ios\"\n      ? this.props.children\n      : React.Children.map(\n          this.props.children,\n          child =>\n            child && child.type === Text\n              ? React.cloneElement(child, { uppercase: true, ...child.props })\n              : child\n        );\n    if (\n      Platform.OS === \"ios\" ||\n      variables.androidRipple === false ||\n      Platform[\"Version\"] <= 21\n    ) {\n      return (\n        <TouchableOpacity\n          {...this.prepareRootProps()}\n          ref={c => (this._root = c)}\n          activeOpacity={\n            this.props.activeOpacity ? this.props.activeOpacity : 0.5\n          }\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    } else {\n      return (\n        <TouchableNativeFeedback\n          ref={c => (this._root = c)}\n          onPress={this.props.onPress}\n          background={\n            this.props.androidRippleColor\n              ? TouchableNativeFeedback.Ripple(this.props.androidRippleColor)\n              : TouchableNativeFeedback.Ripple(variables.androidRippleColor)\n          }\n          {...this.prepareRootProps()}\n        >\n          <View {...this.prepareRootProps()}>\n            {children}\n          </View>\n        </TouchableNativeFeedback>\n      );\n    }\n  }\n}\n\nButton.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: React.PropTypes.object,\n  block: React.PropTypes.bool,\n  primary: React.PropTypes.bool,\n  transparent: React.PropTypes.bool,\n  success: React.PropTypes.bool,\n  danger: React.PropTypes.bool,\n  warning: React.PropTypes.bool,\n  info: React.PropTypes.bool,\n  bordered: React.PropTypes.bool,\n  disabled: React.PropTypes.bool,\n  rounded: React.PropTypes.bool,\n  large: React.PropTypes.bool,\n  small: React.PropTypes.bool,\n  active: React.PropTypes.bool\n};\n\nconst StyledButton = connectStyle(\n  \"NativeBase.Button\",\n  {},\n  mapPropsToStyleNames\n)(Button);\nexport { StyledButton as Button };\n"]},"metadata":{},"sourceType":"script"}