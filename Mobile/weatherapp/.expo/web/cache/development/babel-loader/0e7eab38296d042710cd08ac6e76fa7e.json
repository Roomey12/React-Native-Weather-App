{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTabBar = undefined;\nvar _jsxFileName = \"src/basic/Tabs/DefaultTabBar.js\";\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _platform = require(\"./../../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _index = require(\"./../../index\");\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar React = require(\"react\");\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar StyleSheet = ReactNative.StyleSheet,\n    View = ReactNative.View,\n    Animated = ReactNative.Animated,\n    Platform = ReactNative.Platform,\n    ViewPropTypes = ReactNative.ViewPropTypes;\n\nvar Button = require(\"./Button\");\n\nvar DefaultTabBar = React.createClass({\n  displayName: \"DefaultTabBar\",\n  propTypes: {\n    goToPage: React.PropTypes.func,\n    activeTab: React.PropTypes.number,\n    tabs: React.PropTypes.array,\n    backgroundColor: React.PropTypes.string,\n    activeTextColor: React.PropTypes.string,\n    inactiveTextColor: React.PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: React.PropTypes.func,\n    underlineStyle: ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: React.PropTypes.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeTextColor: _platform2.default.topTabBarActiveTextColor,\n      inactiveTextColor: _platform2.default.topTabBarTextColor,\n      backgroundColor: null\n    };\n  },\n  renderTabOption: function renderTabOption(name, page) {},\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle) {\n    var headerContent = typeof name !== \"string\" ? name.props.children : undefined;\n    var _props = this.props,\n        activeTextColor = _props.activeTextColor,\n        inactiveTextColor = _props.inactiveTextColor;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? \"bold\" : \"normal\";\n\n    if (typeof name === \"string\") {\n      return React.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        key: name,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, React.createElement(_index.TabHeading, {\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, React.createElement(_index.Text, {\n        style: isTabActive ? activeTextStyle : textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, name)));\n    } else {\n      return React.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        key: _lodash2.default.random(1.2, 5.2),\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      }, React.createElement(_index.TabHeading, {\n        style: tabHeaderStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, headerContent));\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n    var platformStyle = variables.platformStyle;\n    var containerWidth = this.props.containerWidth;\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return React.createElement(_index.TabContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page]);\n    }), React.createElement(Animated.View, {\n      style: [tabUnderlineStyle, {\n        left: left\n      }, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }));\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.DefaultTabBar\", {}, mapPropsToStyleNames)(DefaultTabBar);\nexports.DefaultTabBar = StyledTab;","map":{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["React","require","StyleSheet","View","Animated","Platform","ViewPropTypes","ReactNative","Button","DefaultTabBar","propTypes","goToPage","activeTab","tabs","backgroundColor","activeTextColor","inactiveTextColor","tabStyle","renderTab","underlineStyle","contextTypes","theme","getDefaultProps","renderTabOption","headerContent","name","textColor","isTabActive","fontWeight","flex","onPressHandler","render","variables","platformStyle","containerWidth","numberOfTabs","tabUnderlineStyle","position","width","height","bottom","left","inputRange","outputRange","StyledTab"],"mappings":"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","sourcesContent":["const React = require(\"react\");\nconst ReactNative = require(\"react-native\");\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport _ from \"lodash\";\n\nconst { StyleSheet, View, Animated, Platform, ViewPropTypes } = ReactNative;\nconst Button = require(\"./Button\");\n\nconst DefaultTabBar = React.createClass({\n  propTypes: {\n    goToPage: React.PropTypes.func,\n    activeTab: React.PropTypes.number,\n    tabs: React.PropTypes.array,\n    backgroundColor: React.PropTypes.string,\n    activeTextColor: React.PropTypes.string,\n    inactiveTextColor: React.PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: React.PropTypes.func,\n    underlineStyle: ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: React.PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      backgroundColor: null\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle\n  ) {\n    const headerContent = typeof name !== \"string\"\n      ? name.props.children\n      : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? \"bold\" : \"normal\";\n    if (typeof name === \"string\") {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={name}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text style={isTabActive ? activeTextStyle : textStyle}>\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={_.random(1.2, 5.2)}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading style={tabHeaderStyle} active={isTabActive}>\n            {headerContent}\n          </TabHeading>\n        </Button>\n      );\n    }\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer>\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page]\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  \"NativeBase.DefaultTabBar\",\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]},"metadata":{},"sourceType":"script"}