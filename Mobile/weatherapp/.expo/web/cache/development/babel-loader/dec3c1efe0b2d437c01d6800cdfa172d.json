{"ast":null,"code":"\"use_strict\";\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _ReactNativePropRegistry = require(\"react-native/Libraries/Renderer/src/renderers/native/ReactNativePropRegistry\");\n\nvar _ReactNativePropRegistry2 = _interopRequireDefault(_ReactNativePropRegistry);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = function (incomingProps, defaultProps) {\n  var computedProps = {};\n  incomingProps = _lodash2.default.clone(incomingProps);\n  delete incomingProps.children;\n  var incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  if (incomingProps) {\n    _lodash2.default.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n\n  if (incomingPropsStyle) {\n    var computedPropsStyle = {};\n    computedProps.style = {};\n\n    if (Array.isArray(incomingPropsStyle)) {\n      _lodash2.default.forEach(incomingPropsStyle, function (style) {\n        if (typeof style === \"number\") {\n          _lodash2.default.merge(computedPropsStyle, _ReactNativePropRegistry2.default.getByID(style));\n        } else {\n          _lodash2.default.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === \"number\") {\n      computedPropsStyle = _ReactNativePropRegistry2.default.getByID(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    _lodash2.default.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n\n  return computedProps;\n};","map":{"version":3,"sources":["../../../src/Utils/computeProps.js"],"names":["module","computedProps","incomingProps","incomingPropsStyle","computedPropsStyle","Array","defaultProps"],"mappings":"AAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;;;AACA,IAAA,wBAAA,GAAA,OAAA,CAAA,8EAAA,CAAA;;;;;;;;;;AAGAA,MAAAA,CAAAA,OAAAA,GAAiB,UAAA,aAAA,EAAA,YAAA,EAAsC;AAErD,MAAIC,aAAAA,GAAJ,EAAA;AAEAC,EAAAA,aAAAA,GAAgB,QAAA,CAAA,OAAA,CAAA,KAAA,CAAhBA,aAAgB,CAAhBA;AACA,SAAOA,aAAAA,CAAP,QAAA;AAEA,MAAMC,kBAAAA,GAAqBD,aAAAA,CAA3B,KAAA;AACA,SAAOA,aAAAA,CAAP,KAAA;;AAGA,MAAA,aAAA,EAAmB;AACjB,IAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,aAAA,EAAA,YAAA,EAAA,aAAA;AADF,GAAA,MAEO;AACLD,IAAAA,aAAAA,GAAAA,YAAAA;AACD;;AAED,MAAA,kBAAA,EAAwB;AACtB,QAAIG,kBAAAA,GAAJ,EAAA;AACAH,IAAAA,aAAAA,CAAAA,KAAAA,GAAAA,EAAAA;;AACA,QAAII,KAAAA,CAAAA,OAAAA,CAAJ,kBAAIA,CAAJ,EAAuC;AACrC,MAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,kBAAA,EAA8B,UAAA,KAAA,EAAS;AACrC,YAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAC7B,UAAA,QAAA,CAAA,OAAA,CAAA,KAAA,CAAA,kBAAA,EAA4B,yBAAA,CAAA,OAAA,CAAA,OAAA,CAA5B,KAA4B,CAA5B;AADF,SAAA,MAEO;AACL,UAAA,QAAA,CAAA,OAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,KAAA;AACD;AALH,OAAA;AADF,KAAA,MAQO,IAAI,OAAA,kBAAA,KAAJ,QAAA,EAA4C;AACjDD,MAAAA,kBAAAA,GAAqB,yBAAA,CAAA,OAAA,CAAA,OAAA,CAArBA,kBAAqB,CAArBA;AADK,KAAA,MAEA;AACLA,MAAAA,kBAAAA,GAAAA,kBAAAA;AACD;;AAED,IAAA,QAAA,CAAA,OAAA,CAAA,KAAA,CAAQH,aAAAA,CAAR,KAAA,EAA6BK,YAAAA,CAA7B,KAAA,EAAA,kBAAA;AACD;;AAED,SAAA,aAAA;AArCFN,CAAAA","sourcesContent":["\"use_strict\";\nimport _ from \"lodash\";\nimport ReactNativePropRegistry from \"react-native/Libraries/Renderer/src/renderers/native/ReactNativePropRegistry\";\n// For compatibility with RN 0.25\n// import ReactNativePropRegistry from \"react-native/Libraries/ReactNative/ReactNativePropRegistry\";\nmodule.exports = function(incomingProps, defaultProps) {\n  // External props has a higher precedence\n  let computedProps = {};\n\n  incomingProps = _.clone(incomingProps);\n  delete incomingProps.children;\n\n  const incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  // console.log(defaultProps, incomingProps);\n  if (incomingProps) {\n    _.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    let computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, style => {\n        if (typeof style === \"number\") {\n          _.merge(computedPropsStyle, ReactNativePropRegistry.getByID(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === \"number\") {\n      computedPropsStyle = ReactNativePropRegistry.getByID(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n  // console.log(\"computedProps \", computedProps);\n  return computedProps;\n};\n"]},"metadata":{},"sourceType":"script"}