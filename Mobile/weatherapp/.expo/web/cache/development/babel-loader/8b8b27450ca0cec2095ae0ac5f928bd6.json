{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Radio = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/Radio.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _Ionicons = require(\"@expo/vector-icons/Ionicons\");\n\nvar _Ionicons2 = _interopRequireDefault(_Ionicons);\n\nvar _mapPropsToStyleNames = require(\"../Utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _computeProps = require(\"../Utils/computeProps\");\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Radio = function (_Component) {\n  _inherits(Radio, _Component);\n\n  function Radio() {\n    _classCallCheck(this, Radio);\n\n    return _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).apply(this, arguments));\n  }\n\n  _createClass(Radio, [{\n    key: 'prepareRootProps',\n    value: function prepareRootProps() {\n      var defaultProps = {\n        standardStyle: false\n      };\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      var platformStyle = variables.platformStyle;\n      var platform = variables.platform;\n      return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }), _reactNative.Platform.OS === 'ios' && !this.props.standardStyle ? this.props.selected && _react2.default.createElement(_Ionicons2.default, {\n        style: {\n          color: variables.brandPrimary,\n          lineHeight: 25,\n          height: 20,\n          fontSize: variables.radioBtnSize\n        },\n        name: 'ios-checkmark',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }) : _react2.default.createElement(_Ionicons2.default, {\n        style: {\n          color: _reactNative.Platform.OS === 'ios' ? this.props.selected ? variables.brandPrimary : undefined : this.props.selected ? variables.radioSelectedColorAndroid : undefined,\n          lineHeight: variables.radioBtnLineHeight,\n          fontSize: variables.radioBtnSize\n        },\n        name: _reactNative.Platform.OS === 'ios' ? this.props.selected ? 'ios-radio-button-on' : 'ios-radio-button-off' : this.props.selected ? 'md-radio-button-on' : 'md-radio-button-off',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }));\n    }\n  }]);\n\n  return Radio;\n}(_react.Component);\n\nRadio.contextTypes = {\n  theme: _react2.default.PropTypes.object\n};\nRadio.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  selected: _react2.default.PropTypes.bool,\n  standardStyle: _react2.default.PropTypes.bool\n});\nvar StyledRadio = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Radio', {}, _mapPropsToStyleNames2.default)(Radio);\nexports.Radio = StyledRadio;","map":{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","contextTypes","theme","defaultProps","standardStyle","variables","platformStyle","platform","color","lineHeight","height","fontSize","selected","StyledRadio"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport computeProps from '../Utils/computeProps';\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n  prepareRootProps() {\n    const defaultProps = {\n      standardStyle: false,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n\n    return (\n      <TouchableOpacity ref={c => this._root = c} {...this.prepareRootProps()}>\n        {(Platform.OS === 'ios' && !this.props.standardStyle) ?\n          (this.props.selected) && <Icon\n          style={{\n            color: variables.brandPrimary,\n            lineHeight: 25,\n            height: 20,\n            fontSize: variables.radioBtnSize,\n          }}\n          name=\"ios-checkmark\" />\n          :\n          <Icon\n            style={{\n              color: Platform.OS === 'ios' ? (this.props.selected) ? variables.brandPrimary : undefined\n                                           : (this.props.selected) ? variables.radioSelectedColorAndroid : undefined,\n              lineHeight: variables.radioBtnLineHeight,\n              fontSize: variables.radioBtnSize,\n            }}\n            name={\n              Platform.OS === 'ios' ? this.props.selected ? 'ios-radio-button-on' : 'ios-radio-button-off'\n              : this.props.selected ? 'md-radio-button-on' : 'md-radio-button-off'}  />\n      }\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: React.PropTypes.bool,\n  standardStyle: React.PropTypes.bool\n};\n\nconst StyledRadio = connectStyle('NativeBase.Radio', {}, mapPropsToStyleNames)(Radio);\n\nexport {\n  StyledRadio as Radio,\n};\n"]},"metadata":{},"sourceType":"script"}